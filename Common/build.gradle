import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.4.32"
    id 'org.jetbrains.intellij' version '1.2.0'
    id 'org.jlleitschuh.gradle.ktlint' version "10.0.0"
    id 'org.jlleitschuh.gradle.ktlint-idea' version "10.0.0"
    id "com.github.sherter.google-java-format" version "0.9"
}

repositories {
    mavenCentral()
}

group 'com.tabnineCommon'
version project.hasProperty('externalVersion') ? project.externalVersion : '1.0.6'

sourceCompatibility = 9
targetCompatibility = 9

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "9"
    }
}

repositories {
    mavenCentral()
}

apply plugin: "org.jlleitschuh.gradle.ktlint-idea"

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.32")

    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.mockito:mockito-inline:4.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'
    testImplementation "io.mockk:mockk:1.11.0"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.9.0'
}

test {
    useJUnitPlatform()
    reports {
        junitXml.enabled = true
    }
}

def channelName = project.hasProperty('channel') ? project.channel : 'alpha'

sourceSets {
    main {
        java.srcDirs += "channels/${channelName}"
    }
}

tasks {
    compileKotlin {
        dependsOn(ktlintFormat)
    }
}