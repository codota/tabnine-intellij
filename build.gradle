plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.6.1'
}

group 'com.tabnine'
version project.hasProperty('externalVersion') ? project.externalVersion : '0.2.6'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile("org.hamcrest:hamcrest:2.2")
    testCompile "org.mockito:mockito-core:3.5.+"
    testCompile "org.mockito:mockito-junit-jupiter:3.5.+"
    testCompile("com.github.tomakehurst:wiremock-jre8:2.27.2")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.0")
}

test {
    useJUnitPlatform()
    reports {
        junitXml.enabled = true
    }
}

intellij {
    version '2019.3'
    type 'IC'
    updateSinceUntilBuild false
}

def PRODUCTION_CHANNEL = null
def channelName = project.hasProperty('channel') ? project.channel : 'alpha'
def publishChannel = channelName == "production" ? PRODUCTION_CHANNEL : channelName

sourceSets {
    main {
        java.srcDirs += "channels/${channelName}"
    }
}

def hubToken = project.hasProperty('hubToken') ? hubToken : (System.getenv('HUB_TOKEN'))

publishPlugin {
    if (publishChannel != PRODUCTION_CHANNEL) {
        channels publishChannel
    }
    token hubToken
}

tasks.create("currentVersion") {
    doLast {
        println version
    }
}

tasks.getByName("runIde").configure {
    if (project.hasProperty('logFilePath')) {
        systemProperty("TABNINE_LOG_FILE_PATH", logFilePath)
    }
}
