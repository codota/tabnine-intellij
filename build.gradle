plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.9'
}

group 'com.tabnine'
version project.hasProperty('externalVersion') ? project.externalVersion : '0.2.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testCompile "org.mockito:mockito-core:3.5.+"
    testCompile "org.mockito:mockito-junit-jupiter:3.5.+"
    testCompile "com.github.tomakehurst:wiremock-jre8:2.27.2"

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.0")
}

test {
    useJUnitPlatform()
}

intellij {
    version '2019.3'
    type 'IC'
    updateSinceUntilBuild false
    // testing intellij-2020.2
    // plugins 'org.rust.lang:0.3.130.3337-202', 'org.toml.lang:0.2.130.3337-202'
    // testing intellij-2019.1
//    plugins 'org.rust.lang:0.2.98.2125-191'
}

def PRODUCTION_CHANNEL = null
def channelName = project.hasProperty('channel') ? project.channel : 'alpha'
def publishChannel = channelName == "production" ? PRODUCTION_CHANNEL : channelName

sourceSets {
    main {
        java.srcDirs += "channels/${channelName}"
    }
}

def hubToken = project.hasProperty('hubToken') ? hubToken : (System.getenv('HUB_TOKEN'))

publishPlugin {
    if (publishChannel != PRODUCTION_CHANNEL) {
        channels publishChannel
    }
    token hubToken
}

tasks.create("currentVersion") {
    doLast {
        println version
    }
}

task verifyJBPlugin(type: Exec) {
    workingDir projectDir.toString()
    commandLine 'ci/verify-tabnine-plugin.sh'
}
